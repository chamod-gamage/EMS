/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author 618062
 */
public class EditStudentFrame extends javax.swing.JFrame {

    /**
     * Creates new form EditStudentFrame
     */
    private static MyHashTable mainHT = new MyHashTable(10); // REMOVE LATER, PLACEHOLDER HASH TABLE
    private EmployeeInfo employeeToEdit;
    
    public EditStudentFrame(EmployeeInfo employee) {
        initComponents();
        employeeToEdit = employee;
        mainHT.addToTable(employeeToEdit); // SET BEGINNING STATE
        if (employee instanceof PartTimeEmployee){
            partTimeButton.setSelected(true);
            partTimeButtonActionPerformed(null);
        }
        
        else if (employee instanceof FullTimeEmployee){
            fullTimeButton.setSelected(true);
            fullTimeButtonActionPerformed(null);
        }
        setTextFields();
        invalidLabel.setVisible(false);
    }
    
    private void setTextFields(){ // DEFAULT VALUES ARE USED IF INFO IS BLANK, EXCEPTION IF IT CAN BE CALCULATED
        firstNameInput.setText(employeeToEdit.getFirstName());
        lastNameInput.setText(employeeToEdit.getLastName());
        String empNum = Integer.toString(employeeToEdit.getEmployeeNumber());
        employeeNumberInput.setText(empNum);
        genderInput.setText(employeeToEdit.getGender());
        locationInput.setText(employeeToEdit.getWorkLocation());
        String deduction = Double.toString(employeeToEdit.getDeductionRate());
        deductionRateInput.setText(deduction);
        if (employeeToEdit instanceof PartTimeEmployee){
            PartTimeEmployee temp = (PartTimeEmployee)employeeToEdit;
            hourlyWageInput.setText(Double.toString(temp.getHourlyWage()));
            hoursPerWeekInput.setText(Double.toString(temp.getHoursPerWeek()));
            weeksPerYearInput.setText(Double.toString(temp.getWeeksPerYear()));
            yearlySalaryInput.setText(Double.toString(temp.calcAnnualGrossIncome()));
        }
        else {
            FullTimeEmployee temp = (FullTimeEmployee)employeeToEdit;
            yearlySalaryInput.setText(Double.toString(temp.getYearlySalary()));
            weeksPerYearInput.setText("52");
            hoursPerWeekInput.setText("20");
            double wage = (((temp.getYearlySalary())/52)/20);
            hourlyWageInput.setText(Double.toString(wage));
        }
    }
        // FINISH MAKING THIS
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleLabel = new javax.swing.JLabel();
        fullTimeButton = new javax.swing.JRadioButton();
        partTimeButton = new javax.swing.JRadioButton();
        locationLabel = new javax.swing.JLabel();
        firstNameLabel = new javax.swing.JLabel();
        lastNameLabel = new javax.swing.JLabel();
        employeeNumLabel = new javax.swing.JLabel();
        genderLabel = new javax.swing.JLabel();
        deductionRateLabel = new javax.swing.JLabel();
        weeksPerYearLabel = new javax.swing.JLabel();
        yearlySalaryLabel = new javax.swing.JLabel();
        hoursPerWeekLabel = new javax.swing.JLabel();
        hourlyWageLabel = new javax.swing.JLabel();
        firstNameInput = new javax.swing.JTextField();
        lastNameInput = new javax.swing.JTextField();
        employeeNumberInput = new javax.swing.JTextField();
        genderInput = new javax.swing.JTextField();
        locationInput = new javax.swing.JTextField();
        deductionRateInput = new javax.swing.JTextField();
        hourlyWageInput = new javax.swing.JTextField();
        hoursPerWeekInput = new javax.swing.JTextField();
        weeksPerYearInput = new javax.swing.JTextField();
        yearlySalaryInput = new javax.swing.JTextField();
        submitButton = new javax.swing.JButton();
        invalidLabel = new javax.swing.JLabel();
        TestButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        titleLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Edit Employee");
        titleLabel.setToolTipText("");
        titleLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        fullTimeButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        fullTimeButton.setText("Full Time");
        fullTimeButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        fullTimeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fullTimeButtonActionPerformed(evt);
            }
        });

        partTimeButton.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        partTimeButton.setText("Part Time");
        partTimeButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        partTimeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                partTimeButtonActionPerformed(evt);
            }
        });

        locationLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        locationLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        locationLabel.setText("Location");

        firstNameLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        firstNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        firstNameLabel.setText("First Name");
        firstNameLabel.setOpaque(true);

        lastNameLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        lastNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lastNameLabel.setText("Last Name");

        employeeNumLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        employeeNumLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        employeeNumLabel.setText("Employee #");

        genderLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        genderLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        genderLabel.setText("Gender");

        deductionRateLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        deductionRateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        deductionRateLabel.setText("Deduction Rate");

        weeksPerYearLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        weeksPerYearLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        weeksPerYearLabel.setText("Weeks per Year");

        yearlySalaryLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        yearlySalaryLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        yearlySalaryLabel.setText("Yearly Salary");

        hoursPerWeekLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        hoursPerWeekLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hoursPerWeekLabel.setText("Hours Per Week");

        hourlyWageLabel.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        hourlyWageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        hourlyWageLabel.setText("Hourly Wage");

        firstNameInput.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        firstNameInput.setText("Dude Named Joe");

        lastNameInput.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        lastNameInput.setText("Last Name Shmoe");

        employeeNumberInput.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        employeeNumberInput.setText("000055");

        genderInput.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        genderInput.setText("Male");

        locationInput.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        locationInput.setText("Torana");

        deductionRateInput.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        deductionRateInput.setText("0.2");

        hourlyWageInput.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        hourlyWageInput.setText("1556");

        hoursPerWeekInput.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        hoursPerWeekInput.setText("20");

        weeksPerYearInput.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        weeksPerYearInput.setText("50");

        yearlySalaryInput.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        yearlySalaryInput.setText("6599465");

        submitButton.setText("Submit Changes");
        submitButton.setToolTipText("");
        submitButton.setMaximumSize(new java.awt.Dimension(200, 32));
        submitButton.setMinimumSize(new java.awt.Dimension(200, 32));
        submitButton.setPreferredSize(new java.awt.Dimension(200, 32));
        submitButton.setRequestFocusEnabled(false);
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        invalidLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        invalidLabel.setText("Invalid Inputs: Changes Rejected");

        TestButton.setText("jButton1");
        TestButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TestButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(159, 159, 159)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(firstNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(firstNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lastNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(locationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(locationInput, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deductionRateInput, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(partTimeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(hourlyWageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hourlyWageInput, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(yearlySalaryInput, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(employeeNumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(employeeNumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(genderInput, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(yearlySalaryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(deductionRateLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(genderLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lastNameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fullTimeButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(weeksPerYearLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(weeksPerYearInput, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(hoursPerWeekLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hoursPerWeekInput, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(159, 159, 159))
            .addGroup(layout.createSequentialGroup()
                .addGap(400, 400, 400)
                .addComponent(titleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(invalidLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(137, 137, 137)
                .addComponent(TestButton)
                .addGap(186, 186, 186))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fullTimeButton)
                    .addComponent(partTimeButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lastNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(employeeNumLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(genderLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(employeeNumberInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(genderInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(locationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deductionRateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(locationInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deductionRateInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yearlySalaryLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hourlyWageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hourlyWageInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearlySalaryInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hoursPerWeekLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hoursPerWeekInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(weeksPerYearLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(weeksPerYearInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(invalidLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(TestButton)
                        .addGap(88, 88, 88))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void partTimeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_partTimeButtonActionPerformed
        // TODO add your handling code here:
        fullTimeButton.setSelected(false);
        hourlyWageLabel.setVisible(true);
        hoursPerWeekLabel.setVisible(true);
        weeksPerYearLabel.setVisible(true);
        yearlySalaryLabel.setVisible(false);
        hourlyWageInput.setVisible(true);
        hoursPerWeekInput.setVisible(true);
        weeksPerYearInput.setVisible(true);
        yearlySalaryInput.setVisible(false);
        partTimeButton.setEnabled(false);
        fullTimeButton.setEnabled(true);
    }//GEN-LAST:event_partTimeButtonActionPerformed

    private void fullTimeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fullTimeButtonActionPerformed
        // TODO add your handling code here:
        partTimeButton.setSelected(false);
        hourlyWageLabel.setVisible(false);
        hoursPerWeekLabel.setVisible(false);
        weeksPerYearLabel.setVisible(false);
        yearlySalaryLabel.setVisible(true);
        hourlyWageInput.setVisible(false);
        hoursPerWeekInput.setVisible(false);
        weeksPerYearInput.setVisible(false);
        yearlySalaryInput.setVisible(true);
        fullTimeButton.setEnabled(false);
        partTimeButton.setEnabled(true);
    }//GEN-LAST:event_fullTimeButtonActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
//        // TODO add your handling code here:
        String firstName = StringConverter.stripTrailingSpaces(firstNameInput.getText());
        String lastName = StringConverter.stripTrailingSpaces(lastNameInput.getText());
        if ((!StringConverter.stringChecker(firstName)) || (!StringConverter.stringChecker(lastName))){
            invalidLabel.setVisible(true);
            return;
        }
        int employeeNumber = StringConverter.stringToInteger(StringConverter.stripTrailingSpaces(employeeNumberInput.getText()));
        String gender = StringConverter.stripTrailingSpaces(genderInput.getText());
        String location = StringConverter.stripTrailingSpaces(locationInput.getText());
        if ((!StringConverter.stringChecker(gender)) || (!StringConverter.stringChecker(location))){
            invalidLabel.setVisible(true);
            return;
        }
        double deductionRate = StringConverter.stringToDollars(StringConverter.stripTrailingSpaces(deductionRateInput.getText()));
        if ((employeeNumber == -1) || (deductionRate == -1)){
            invalidLabel.setVisible(true);
            return;
        }
        if (partTimeButton.isSelected()) {
            double hourlyWage = StringConverter.stringToDollars(StringConverter.stripTrailingSpaces(hourlyWageInput.getText()));
            double hoursPerWeek = StringConverter.stringToDollars(StringConverter.stripTrailingSpaces(hoursPerWeekInput.getText()));
            double weeksPerYear = StringConverter.stringToDollars(StringConverter.stripTrailingSpaces(weeksPerYearInput.getText()));
            if (hourlyWage == -1 || hoursPerWeek == -1 || weeksPerYear == -1){
                invalidLabel.setVisible(true);
                return;
            }
            if (employeeToEdit instanceof PartTimeEmployee) {
                PartTimeEmployee temp = (PartTimeEmployee)employeeToEdit;
                temp.setFirstName(firstName);
                temp.setLastName(lastName);
                temp.setEmployeeNumber(employeeNumber);
                temp.setGender(gender);
                temp.setWorkLocation(location);
                temp.setDeductionRate(deductionRate);
                temp.setHourlyWage(hourlyWage);
                temp.setHoursPerWeek(hoursPerWeek);
                temp.setWeeksPerYear(weeksPerYear);
                mainHT.removeFromTable(employeeToEdit.getEmployeeNumber());
                mainHT.addToTable(temp);
                employeeToEdit = temp;
            }
            else {
                PartTimeEmployee temp = new PartTimeEmployee();
                temp.setFirstName(firstName);
                temp.setLastName(lastName);
                temp.setEmployeeNumber(employeeNumber);
                temp.setGender(gender);
                temp.setWorkLocation(location);
                temp.setDeductionRate(deductionRate);
                temp.setHourlyWage(hourlyWage);
                temp.setHoursPerWeek(hoursPerWeek);
                temp.setWeeksPerYear(weeksPerYear);
                mainHT.removeFromTable(employeeToEdit.getEmployeeNumber());
                mainHT.addToTable(temp);
                employeeToEdit = temp;
            }
        }
        if (fullTimeButton.isSelected()) {
           // ADD SAME STUFF FOR FULL TIME EMPLOYEE
           double yearlySalary = StringConverter.stringToDollars(StringConverter.stripTrailingSpaces(yearlySalaryInput.getText())); 
           if (yearlySalary == -1) {
               invalidLabel.setVisible(true);
               return;
           }
           if (employeeToEdit instanceof FullTimeEmployee){
                FullTimeEmployee temp = (FullTimeEmployee)employeeToEdit;
                temp.setFirstName(firstName);
                temp.setLastName(lastName);
                temp.setEmployeeNumber(employeeNumber);
                temp.setGender(gender);
                temp.setWorkLocation(location);
                temp.setDeductionRate(deductionRate);
                temp.setYearlySalary(yearlySalary);
                mainHT.removeFromTable(employeeToEdit.getEmployeeNumber());
                mainHT.addToTable(temp);
                employeeToEdit = temp;
           }
           else {
                FullTimeEmployee temp = new FullTimeEmployee();
                temp.setFirstName(firstName);
                temp.setLastName(lastName);
                temp.setEmployeeNumber(employeeNumber);
                temp.setGender(gender);
                temp.setWorkLocation(location);
                temp.setDeductionRate(deductionRate);
                temp.setYearlySalary(yearlySalary);
                mainHT.removeFromTable(employeeToEdit.getEmployeeNumber());
                mainHT.addToTable(temp);
                employeeToEdit = temp;
           }
        }
        this.setVisible(false);
        System.exit(0); // REMOVE LATER
    }//GEN-LAST:event_submitButtonActionPerformed

    private void TestButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TestButtonActionPerformed
        // TODO add your handling code here:
        System.out.println(mainHT.readFromTable(employeeToEdit.getEmployeeNumber()).getLastName());
    }//GEN-LAST:event_TestButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditStudentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditStudentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditStudentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditStudentFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        FullTimeEmployee myEmployee = new FullTimeEmployee();
        EditStudentFrame theFrame = new EditStudentFrame(myEmployee);
        theFrame.setVisible(true);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton TestButton;
    private javax.swing.JTextField deductionRateInput;
    private javax.swing.JLabel deductionRateLabel;
    private javax.swing.JLabel employeeNumLabel;
    private javax.swing.JTextField employeeNumberInput;
    private javax.swing.JTextField firstNameInput;
    private javax.swing.JLabel firstNameLabel;
    private javax.swing.JRadioButton fullTimeButton;
    private javax.swing.JTextField genderInput;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JTextField hourlyWageInput;
    private javax.swing.JLabel hourlyWageLabel;
    private javax.swing.JTextField hoursPerWeekInput;
    private javax.swing.JLabel hoursPerWeekLabel;
    private javax.swing.JLabel invalidLabel;
    private javax.swing.JTextField lastNameInput;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField locationInput;
    private javax.swing.JLabel locationLabel;
    private javax.swing.JRadioButton partTimeButton;
    private javax.swing.JButton submitButton;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField weeksPerYearInput;
    private javax.swing.JLabel weeksPerYearLabel;
    private javax.swing.JTextField yearlySalaryInput;
    private javax.swing.JLabel yearlySalaryLabel;
    // End of variables declaration//GEN-END:variables
}
